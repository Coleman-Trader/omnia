---
# tasks file for slurm
- name: Append share path if NFS
  ansible.builtin.set_fact:
    slurm_share_prefix: "{{ share_path + '/' + slurm_dir_name if (slurm_installation_type == 'nfs_share') else '/' }}"

- name: Just force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true
    daemon_reexec: true

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Stop Services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: stopped
  when: item in ansible_facts['services'].keys()
  ignore_errors: true
  register: stop_services_out
  no_log: true
  loop:
    - slurmctld.service
    - slurmdbd.service
    - slurmd.service
    - munge.service

- name: Refresh mounts
  ansible.builtin.shell: |
    umount {{ share_path }}
    mount -a
  register: refresh_mounts
  ignore_errors: true
  changed_when: refresh_mounts.rc == 0

- name: Remove share slurm path
  ansible.builtin.file:
    path: "{{ share_path }}/{{ slurm_dir_name }}"
    state: absent
  run_once: true

- name: Remove files and folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/var/spool/state"
    - "{{ slurm_share_prefix }}{{ slurm_config_dir }}"
    - "{{ munge_key_dest }}"

- name: Remove packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: absent
    autoremove: true
  loop:
    - slurm-slurmctld
    - slurm-slurmdbd
    - slurm-slurmd
    - munge
    - mariadb-server

- name: Remove slurm user
  ansible.builtin.user:
    name: slurm
    state: absent

- name: Remove slurm group
  ansible.builtin.group:
    name: slurm
    state: absent

- name: Unset env variable
  community.general.ini_file:
    path: "{{ sys_env_path }}"
    option: SLURM_CONF
    state: absent
    mode: u=rw,g=r,o=r

- name: Just force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true
