---
- name: Append share path if NFS
  ansible.builtin.set_fact:
    slurm_share_prefix: "{{ share_path }}/{{ slurm_dir_name }}"

- name: Remove the slurm nodes
  ansible.builtin.lineinfile:
    path: "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
    state: absent
    regexp: "^NodeName={{ item }} "
  register: node_check
  loop: "{{ groups['slurm_node'] }}"

- name: debug
  ansible.builtin.debug:
    var: node_check

- name: Get slurm info output if slurm is installed
  ansible.builtin.shell: scontrol show node | awk '/NodeName/ {print $1}' | cut -d= -f2
  register: slurm_nodes

- name: Assemble all slurm_nodes
  ansible.builtin.set_fact:
    rem_nodes: "{{ (slurm_nodes['stdout_lines'] | difference(groups['slurm_node'])) | unique | sort }}"

# - name: pause
#   ansible.builtin.pause:

- name: Edit the partition
  ansible.builtin.lineinfile:
    path: "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
    state: present
    line: "PartitionName={{ slurm_partition_name }} Nodes={{ rem_nodes | join(',') }} MaxTime=INFINITE State=UP"
    regexp: "^PartitionName={{ slurm_partition_name }} "
  # notify:
  #   - Restart slurmctld

# - name: Reconfig ctld
#   ansible.builtin.shell: scontrol reconfigure
