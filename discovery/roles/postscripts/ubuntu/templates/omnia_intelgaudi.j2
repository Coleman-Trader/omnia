#!/bin/bash
################################################################################################################
#  omnia_intelgaudi:
#      Install Intel Gaudi drivers on all the cluster nodes
#
#################################################################################################################
echo "--------------------------" >> /var/log/xcat/xcat.log
echo "Checking for Intel Gaudi cards" >> /var/log/xcat/xcat.log
gaudi_check_processing_xlr8r=`lspci | grep "Processing accelerators: Habana Labs Ltd"`
validate_ubuntu_os="$(cat /etc/os-release | grep 'ID=ubuntu' | wc -l)"

systemd_service_for_scale_out_interfaces() {

echo "Set systemd service for Gaudi scale out interfaces" >> /var/log/xcat/xcat.log
if [ ! -f /opt/habanalabs/qual/gaudi2/bin/manage_network_ifs.sh ] && [ ! -f /opt/habanalabs/qual/gaudi3/bin/manage_network_ifs.sh ] ; then
  echo "File manage_network_ifs.sh not found, stop setting." >> /var/log/xcat/xcat.log
  return 1
fi


base_dir="/opt/omnia/systemd-service"
mkdir -p $base_dir
script_to_run="$base_dir/gaudi-network.sh"

cat <<'EOF' > $script_to_run
#!/bin/bash

gaudi_ver=$(if [ -n "$(lspci -n -d 1da3:1060:1200)" ]; then echo "gaudi3"; else echo "gaudi2"; fi)

EXT_PORTS="24"
RETRIES=10
SLEEP_INTERVAL=30

/opt/habanalabs/qual/$gaudi_ver/bin/manage_network_ifs.sh --up
RET_CODE=$?
if [ "${RET_CODE}" -eq "1" ]; then
  echo "One or more Gaudi ports are down." >> /dev/stderr
  return 1
fi

cmd_check_if="ip -br link | grep 68:93 | awk '{print \$2}' | grep UP | wc -l"
counter=0
while [[ $counter -lt $RETRIES ]]; do
  res=$(eval $cmd_check_if)
  if [[ "$res" == "$EXT_PORTS" ]]; then
    echo "Gaudi external ports are up"
    break
  else
    ((counter++))
    sleep $SLEEP_INTERVAL
  fi
done

cmd_pfc=$(/opt/habanalabs/qual/$gaudi_ver/bin/manage_network_ifs.sh --set-pfc)
cmd_check_pfc="/opt/habanalabs/qual/$gaudi_ver/bin/manage_network_ifs.sh --check-pfc | grep enabled=15 | wc -l"
counter=0
while [[ $counter -lt $RETRIES ]]; do
  res=$(eval $cmd_check_pfc)
  if [[ "$res" == "$EXT_PORTS" ]]; then
    echo "Gaudi external ports PFC set"
    break
  else
    ((counter++))
    sleep $SLEEP_INTERVAL
  fi
done

cmd_jumbo_mtu=$(ip -br link | grep 68:93 | awk '{print $1}' | xargs -t -I {} ip link set dev {} mtu 8000)
cmd_check_jumbo_mtu="ip addr show | grep '68:93' -B 1 | grep 'mtu 8000' | wc -l"
counter=0
while [[ $counter -lt $RETRIES ]]; do
  res=$(eval $cmd_check_jumbo_mtu)
  if [[ "$res" == "$EXT_PORTS" ]]; then
    echo "Gaudi external ports MTU jumbo frames set"
    break
  else
    ((counter++))
    sleep $SLEEP_INTERVAL
  fi
done
EOF

chmod +x $script_to_run

service_file="$base_dir/gaudi-network.service"
cat <<'EOF' > $service_file
[Unit]
Description=Gaudi accelerator network
Requires=lldpad.service
After=lldapad.service
Before=containerd.service 

[Service]
Type=simple
RemainAfterExit=True
ExecStart=/opt/omnia/systemd-service/gaudi-network.sh
ExecStop=/bin/kill -s -TERM $MAINPID

[Install]
WantedBy=multi-user.target
EOF

svc_dir=/usr/local/lib/systemd/system
mkdir -p -m 755 ${svc_dir}
cp $service_file ${svc_dir}
chmod 644 ${svc_dir}/gaudi-network.service
systemctl enable gaudi-network.service

}

if [[ $gaudi_check_processing_xlr8r == *"Habana Labs Ltd"* ]]; then
  echo "Installing Intel Gaudi" >> /var/log/xcat/xcat.log
  if [[ $validate_ubuntu_os == "1"  ]]
  then

    echo "deb [trusted=yes] http://{{ admin_nic_ip }}:80/install{{ repo_store_path }}/cluster/apt/intelgaudi/{{ intelgaudi_version }} ./" >> /etc/apt/sources.list.d/intelgaudi.list

    sudo apt-get update
    sudo apt install libopenmpi3 dkms libelf-dev lldpad -y
    sudo systemctl enable lldpad
    sudo apt install linux-headers-$(uname -r) -y

    check_ubuntu22="$(cat /etc/os-release | grep 'VERSION_ID="22.04"' | wc -l)"
    if [[ "$check_ubuntu22" == "1" ]]
    then
        sudo apt install -y habanalabs-dkms \
        habanalabs-firmware \
        habanalabs-firmware-tools \
        habanalabs-graph \
        habanalabs-qual \
        habanalabs-rdma-core \
        habanalabs-thunk \
        habanatools
    fi

    check_ubuntu24="$(cat /etc/os-release | grep 'VERSION_ID="24.04"' | wc -l)"
    if [[ "$check_ubuntu24" == "1" ]]
    then
        sudo apt install -y habanalabs-dkms \
        habanalabs-firmware \
        habanalabs-firmware-tools \
        habanalabs-graph \
        habanalabs-qual \
        habanalabs-rdma-core \
        habanalabs-thunk \
        habanalabs-tools
    fi

    rm /etc/apt/sources.list.d/intelgaudi.list

    apt-get update
    echo "Intel Gaudi driver installation completed" >> /var/log/xcat/xcat.log

    # make sure Gaudi scale out interfaces are set up after rebooting
    systemd_service_for_scale_out_interfaces

  fi
  echo "-----------------------------" >> /var/log/xcat/xcat.log
fi