# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Delete cuda repo folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ cuda_core_path }}"

- name: Create cuda repo folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ repo_permission }}"
  with_items:
    - "{{ cuda_core_path }}"

- name: Try extracting cuda debs
  block:
    - name: Extract cuda debs
      ansible.builtin.shell: >
        set -o pipefail && \
        dpkg -x {{ cuda_toolkit_path }} {{ cuda_core_path }}
      changed_when: true
  rescue:
    - name: Invalid cuda rpm file
      ansible.builtin.fail:
        msg: "{{ invalid_cuda_rpm_fail_msg }}"

- name: Find cuda debs folder
  ansible.builtin.find:
    paths: "{{ cuda_core_path }}/var/"
    file_type: directory
  register: cuda_rpm_dir

- name: Find cuda gpg key
  ansible.builtin.find:
    paths: "{{ cuda_rpm_dir.files[0].path }}"
    patterns: "cuda*.gpg"
  register: cuda_gpg_file

- name: Set cuda gpg key
  ansible.builtin.set_fact:
    cuda_gpg_key: "{{ cuda_gpg_file.files[0].path.split('/')[-1] }}"
    cuda_debs_folder: "{{ cuda_gpg_file.files[0].path.split('/')[-2] }}"

- name: Set CUDA version
  ansible.builtin.set_fact:
    cuda_version: "{{ hostvars[inventory_hostname]['cuda_version'] | default('unknown') }}"

- name: Handle CUDA JSON and libnccl packages for Ubuntu 24.04
  when: provision_os == libnccl_supported_os and provision_os_version == libnccl_supported_os_version
  block:
    - name: Load CUDA JSON file
      ansible.builtin.slurp:
        src: "{{ cuda_json_file }}"
      register: cuda_json_raw

    - name: Decode JSON content
      ansible.builtin.set_fact:
        cuda_json: "{{ cuda_json_raw.content | b64decode | from_json }}"

    - name: Extract libnccl package names
      ansible.builtin.set_fact:
        libnccl2_package_name: "{{ (cuda_json.cuda.cluster | selectattr('url', 'search', 'libnccl2') | map(attribute='url') | first | basename) | default('') }}" # noqa: yaml[line-length]
        libnccl_dev_package_name: "{{ (cuda_json.cuda.cluster | selectattr('url', 'search', 'libnccl-dev') | map(attribute='url') | first | basename) | default('') }}" # noqa: yaml[line-length]

    - name: Copy libnccl packages to CUDA debs folder
      ansible.builtin.copy:
        src: "{{ libnccl_path }}/{{ item }}"
        dest: "{{ cuda_core_path }}/var/{{ cuda_debs_folder }}/"
        mode: "{{ file_permission }}"
      with_items:
        - "{{ libnccl2_package_name }}"
        - "{{ libnccl_dev_package_name }}"

- name: Copy CUDA script to postscripts
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items: "{{ cuda_postscripts_path }}"
