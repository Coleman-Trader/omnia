#!/bin/bash
################################################################################################################
#  omnia_cuda:
#      Install CUDA on all the cluster nodes using CUDA rpm file provided
#
#################################################################################################################
echo "--------------------------" >> /var/log/xcat/xcat.log

if [ -f "/etc/debian_version" ]; then
  str_os_type="debian"
else
  str_os_type="redhat"
fi

LOG_FILE="/var/log/xcat/xcat.log"
echo "Checking for NVIDIA cards" >> "$LOG_FILE"
nvidia_check=$(lspci | grep -i nvidia)

if [[ $nvidia_check == *"NVIDIA"* ]]; then
  if [ "$str_os_type" = "debian" ]; then
    CUDA_REPO_ENTRY="deb [trusted=yes] http://{{ admin_nic_ip }}:80{{ cuda_core_path }}/var/{{ cuda_debs_folder }} /"
    DEFAULT_SOURCE_LIST="/etc/apt/sources.list.d"
    if [[ "{{ cuda_version }}" > "12.8.0" ]] || [[ "{{ cuda_version }}" == "12.8.0" ]]; then
      OMNIA_DIR="/etc/apt/omnia_sources"
      OMNIA_LIST="$OMNIA_DIR/sources.list.d"

      echo "Starting CUDA installation in Debian" >> "$LOG_FILE"
      echo "Running apt clean and update..." >> "$LOG_FILE"
      apt clean >> "$LOG_FILE" 2>&1
      apt update >> "$LOG_FILE" 2>&1
      echo "# Installing dkms ..." >> "$LOG_FILE"
      apt install -y dkms >> "$LOG_FILE" 2>&1

      mkdir -p "$OMNIA_LIST"
      echo "$CUDA_REPO_ENTRY" >> "$DEFAULT_SOURCE_LIST/cuda.list"
      echo "$CUDA_REPO_ENTRY" >> "$OMNIA_LIST/cuda.list"

      echo "# Switching APT to use only omnia_sources and disabling Ubuntu repos..." >> "$LOG_FILE"

      if [ ! -f /etc/apt/apt.conf ]; then
          touch /etc/apt/apt.conf
      fi

      echo 'Dir::Etc "/etc/apt/omnia_sources/";' >> /etc/apt/apt.conf

      apt update >> "$LOG_FILE" 2>&1
      echo "# Installing nvidia-driver-*-open nvidia-fabricmanager..." >> "$LOG_FILE"
      apt install -y nvidia-driver-*-open nvidia-fabricmanager >> "$LOG_FILE" 2>&1

      echo "# Restoring default APT sources..." >> "$LOG_FILE"
      rm -f /etc/apt/apt.conf
      rm -rf "$OMNIA_DIR"
      apt update >> "$LOG_FILE" 2>&1

      echo "# Installing CUDA..." >> "$LOG_FILE"
      apt install -y cuda >> "$LOG_FILE" 2>&1
      echo "PATH=$PATH:/usr/local/cuda/bin" >> /root/.bashrc
      apt clean >> "$LOG_FILE"
      apt update >> "$LOG_FILE"
      echo "# CUDA installation completed successfully!" >> "$LOG_FILE"
    else
      echo "Starting CUDA installation in Debian" >> "$LOG_FILE"
      echo "$CUDA_REPO_ENTRY" >> "$DEFAULT_SOURCE_LIST/cuda.list"
      apt clean >> "$LOG_FILE"
      apt update >> "$LOG_FILE"
      apt install cuda cuda-drivers-fabricmanager -y >> "$LOG_FILE"
      systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target >> "$LOG_FILE"
      echo "PATH=$PATH:/usr/local/cuda/bin" >> /root/.bashrc
      rm -rf "$DEFAULT_SOURCE_LIST/cuda.list"
      apt clean >> "$LOG_FILE"
      apt update >> "$LOG_FILE"
      echo "CUDA installation completed in Debian" >> "$LOG_FILE"
    fi
  elif [ "$str_os_type" = "redhat" ]; then
    if [[ "{{ cuda_version }}" > "12.8.0" ]] || [[ "{{ cuda_version }}" == "12.8.0" ]]; then
      echo "Starting CUDA installation in RHEL/Rocky" >> "$LOG_FILE"
      echo "# Executing groupinstall 'Development Tools'" >> "$LOG_FILE"
      dnf groupinstall "Development Tools" -y
      echo "# Installing kernel-devel & kernel-headers" >> "$LOG_FILE"
      dnf install kernel-devel kernel-headers -y
      dnf clean all
      echo "# Installing cuda kmod-nvidia-open-dkms nvidia-driver nvidia-fabricmanager llvm-libs" >> "$LOG_FILE"
      dnf install cuda kmod-nvidia-open-dkms nvidia-driver nvidia-fabricmanager llvm-libs >> "$LOG_FILE"
      systemctl enable nvidia-persistenced
      systemctl start nvidia-persistenced
      echo "CUDA installation completed in RHEL/Rocky" >> "$LOG_FILE"
    else
      echo "Starting CUDA installation in RHEL/Rocky" >> "$LOG_FILE"
      dnf groupinstall "Development Tools" -y
      dnf install kernel-devel kernel-headers -y
      dnf clean all
      dnf install nvidia-driver cuda-drivers kmod-nvidia-latest-dkms dkms llvm-libs -y
      dnf -y install cuda cuda-drivers-fabricmanager
      systemctl enable nvidia-persistenced
      systemctl start nvidia-persistenced
      echo "CUDA installation completed in RHEL/Rocky" >> "$LOG_FILE"

    fi
  fi
else
  echo "NVIDIA cards not found" >> "$LOG_FILE"
fi

echo "-----------------------------" >> "$LOG_FILE"
