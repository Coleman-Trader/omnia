# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initialize variables
  ansible.builtin.set_fact:
    diskful_osimage_status: false

- name: Register NFS Check
  ansible.builtin.set_fact:
    nfs_used: "{{ omnia_share_option == 'NFS' }}"

- name: Check diskful osimage is created
  ansible.builtin.shell: >
    set -o pipefail && \
    {{ xcat_path }}/lsdef -t osimage | grep "{{ osimage_search_key }}" | grep "{{ provision_os }}" | grep "{{ provision_os_version }}"
  changed_when: false
  failed_when: false
  register: diskful_osimage_check

- name: Set diskful_osimage_status to true
  ansible.builtin.set_fact:
    diskful_osimage_status: true
  when:
    - provision_os in diskful_osimage_check.stdout
    - provision_os_version in diskful_osimage_check.stdout

- name: Create tmp osimage directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: directory
    mode: "{{ mode }}"

- name: Create diskful osimage
  ansible.builtin.command: "{{ xcat_sbin_path }}/copycds {{ iso_file_path }}"
  changed_when: true
  when: not diskful_osimage_status and not nfs_used

- name: Create diskful osimage
  ansible.builtin.command: "{{ xcat_sbin_path }}/copycds -p {{ tmp_dir }} {{ iso_file_path }}"
  changed_when: true
  when: not diskful_osimage_status and nfs_used

- name: Copy osimages to xCAT install directory
  ansible.builtin.copy:
    src: "{{ tmp_dir }}/"
    dest: "{{ xcat_install_dir }}"
    remote_src: true
    mode: "{{ mode }}"
  when: not diskful_osimage_status and nfs_used

- name: Delete directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: absent
  when: not diskful_osimage_status and nfs_used

- name: get osimage name
  ansible.builtin.shell: >
    set -o pipefail && \
    {{ xcat_path }}/lsdef -t osimage | grep "{{ osimage_search_key }}" | grep "{{ provision_os }}" | grep "{{ provision_os_version }}" | cut -d' ' -f1
  changed_when: false
  register: fetch_osimage
  when: not diskful_osimage_status and nfs_used
 
- name: Modify osimages to xCAT install directory
  ansible.builtin.command: "{{ xcat_path }}/chdef -t osimage {{ fetch_osimage.stdout }} pkgdir={{ xcat_install_dir }}"
  changed_when: true
  when: not diskful_osimage_status and nfs_used and fetch_osimage.stdout is defined
