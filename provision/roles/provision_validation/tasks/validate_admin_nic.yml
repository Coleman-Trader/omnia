# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Assert admin nic value
  ansible.builtin.assert:
    that:
      - admin_nic in nic_addr_up.stdout
    success_msg: " Admin {{ success_msg_nic }}"
    fail_msg: "{{ fail_msg_nic }} for admin nic"
  tags: [validate, admin-network]

- name: Assert admin nic subnet if it is given
  ansible.builtin.assert:
    that:
      - admin_nic_subnet | default("", true) | length > 6
    success_msg: "{{ success_subnet }} for admin nic "
    fail_msg: "{{ fail_admin_subnet_msg }}"

- name: Fetch admin NIC when dedicated network
  include_tasks: validate_dedicated_config.yml
  when: network_interface_type == "dedicated"

- name: Fetch admin NIC when lom network
  include_tasks: validate_lom_config.yml
  when: network_interface_type == "lom"

- name: Assign values to pxe nic
  ansible.builtin.set_fact:
    pxe_nic: "{{ admin_nic }}"
    pxe_nic_ip: "{{ admin_nic_ip }}"
    pxe_nic_subnet: "{{ admin_nic_subnet }}"
    pxe_subnet: "{{ admin_nic_subnet }}"
    pxe_nic_netmask: "{{ admin_nic_netmask }}"

- name: Gather the MAC address of admin nic
  ansible.builtin.set_fact:
    pxe_mac_address: "{{ ansible_facts[pxe_nic]['macaddress'] | default(None) }}"

- name: Set default pxe start and end ranges
  ansible.builtin.set_fact:
    pxe_nic_start_range: "{{ pxe_nic_start }}"
    pxe_nic_end_range: "{{ pxe_nic_end }}"
  when: discovery_mechanism != discovery_method_switch_based
