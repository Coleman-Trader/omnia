 # Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Install python docker
  ansible.builtin.command: "{{ python_version }} -m pip install {{ docker_python_package }}"
  changed_when: true

- name: Login to docker
  block:
    - name: Docker login
      community.docker.docker_login:
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"
      register: docker_login_output
      no_log: true
      when:
        - docker_username is defined
        - docker_password is defined
        - docker_password | length > 1
        - docker_password | length > 1
  rescue:
    - name: Warning - docker login failed
      ansible.builtin.debug:
        msg: "Warning: {{ docker_login_output.msg }}"

- name: Start and enable docker-registry service
  block:
    - name: Check if service is already running
      ansible.builtin.systemd:
        name: "docker-registry"
      register: docker_registry_status

    - name: Initiate service if not running already
      ansible.builtin.systemd:
        name: docker-registry
        state: started
        enabled: true
      when: docker_registry_status.status.ActiveState == "inactive"

  rescue:
    - name: Failed to initiate docker-registry service
      ansible.builtin.fail:
        msg: "{{ docker_registry_failure_msg }}"

- name: Pull docker images
  block:
    - name: Pull docker image
      community.docker.docker_image:
        name: "{{ item.image_url }}"
        source: pull
      register: docker_pull_image
      with_items: "{{ hpc_apptainer_image }}"
  rescue:
    - name: Failed to pull docker image
      ansible.builtin.fail:
        msg: "{{ docker_pull_fail_msg }}"

- name: Tag and push docker image to local registry
  community.docker.docker_image:
    name: "{{ item.image_url }}"
    repository: "{{ oim_hostname }}:{{ docker_registry_port }}/{{ item.image_url }}"
    push: true
    source: local
  with_items: "{{ hpc_apptainer_image }}"

- name: Delete hpc images list
  ansible.builtin.file:
    path: "{{ hpc_image_list }}"
    state: absent

- name: Add docker image name to list
  ansible.builtin.lineinfile:
    path: "{{ hpc_image_list }}"
    line: "{{ oim_hostname }}:{{ docker_registry_port }}/{{ item.image_url }}"
    state: present
    create: true
    mode: "{{ file_permission }}"
  with_items: "{{ hpc_apptainer_image }}"
