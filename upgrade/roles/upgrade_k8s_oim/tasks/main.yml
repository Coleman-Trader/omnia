# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Include vars from upgrade_config.yml
  ansible.builtin.include_vars: "{{ upgrade_config_path }}"
  register: include_upgrade_config
  no_log: true

- name: Include vars from current installed software_config.json
  ansible.builtin.include_vars: "{{ sw_json_path }}"
  register: include_sw_json
  no_log: true

- name: Include vars from local_repo_access.yml
  ansible.builtin.include_vars:
    file: "{{ access_file_path }}"
  no_log: true

- name: Check telemetry_config.yml file is encrypted
  ansible.builtin.command: cat {{ telemetry_config_file }}
  changed_when: false
  register: config_content
  no_log: true

- name: Decrpyt telemetry_login_vars.yml
  ansible.builtin.command: >-
    ansible-vault decrypt {{ telemetry_config_file }}
    --vault-password-file {{ telemetry_vault_filename }}
  changed_when: false
  when: "'$ANSIBLE_VAULT;' in config_content.stdout"

- name: Include variable file telemetry_config.yml
  block:
    - name: Include variable file telemetry_config.yml
      ansible.builtin.include_vars: "{{ telemetry_config_file }}"
      register: include_telemetry_config
      no_log: true
  rescue:
    - name: Failed to include telemetry_config.yml
      ansible.builtin.fail:
        msg: "{{ telemetry_config_syntax_fail_msg }} Error: {{ include_telemetry_config.message }}"

- name: Create ansible vault key
  ansible.builtin.set_fact:
    vault_key: "{{ lookup('password', '/dev/null chars=ascii_letters') }}"
  when: "'$ANSIBLE_VAULT;' not in config_content.stdout"

- name: Save vault key
  ansible.builtin.lineinfile:
    path: "{{ telemetry_vault_filename }}"
    line: "{{ vault_key }}"
    mode: "{{ vault_file_perm }}"
    owner: root
    create: true
  when: "'$ANSIBLE_VAULT;' not in config_content.stdout"

- name: Encrypt telemetry_config.yml file
  ansible.builtin.command: >-
    ansible-vault encrypt {{ telemetry_config_file }}
    --vault-password-file {{ telemetry_vault_filename }}
  changed_when: false

- name: Check Kubernetes installation status on control plane
  ansible.builtin.include_tasks: k8s_check.yml

- name: Install K8s on Control plane
  when: k8s_oim_installed
  block:
    - name: Modify software_config.json for package download
      ansible.builtin.include_tasks: modify_sw_json.yml

    - name: Download Packages for K8s upgrade
      ansible.builtin.include_tasks: download_k8s_pkgs.yml

    - name: Cleanup metallb
      ansible.builtin.include_tasks: metallb_cleanup.yml

    - name: Upgrade Kubernetes on Control Plane
      ansible.builtin.include_tasks: pre_upgrade.yml

    - name: Restore metallb
      ansible.builtin.include_tasks: restore_metallb.yml
