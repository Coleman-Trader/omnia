# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Re-apply metallb CRD
  kubernetes.core.k8s:
    state: present
    src: "{{ metallb_crd_path }}"

- name: Get info for all Kubernetes services
  kubernetes.core.k8s_info:
    kind: Service
  register: svc_info

- name: Change svc type back to LoadBalancer
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ svc_item.metadata.name }}"
        namespace: "{{ svc_item.metadata.namespace }}"
      spec:
        type: LoadBalancer
  loop: "{{ svc_info.resources }}"
  loop_control:
    loop_var: svc_item
  when: svc_item.spec.type == 'ClusterIP' and svc_item.metadata.name in ['grafana', 'timescaledb']

- name: Re-apply metallb pools.yaml
  kubernetes.core.k8s:
    state: present
    src: "{{ metallb_pools_path }}"
  register: metallb_result
  retries: 5
  delay: 10
  until: metallb_result is not failed

- name: Re-apply metallb layer2.yaml
  kubernetes.core.k8s:
    state: present
    src: "{{ metallb_layer2_path }}"

- name: Delete track_upgrade.txt file after successful upgrade
  ansible.builtin.file:
    path: "{{ track_file_path }}"
    state: absent

- name: Copy binaries to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ bin_path }}/{{ item }}"
    dest: "{{ local_bin_path }}/{{ item }}"
    mode: "{{ copy_permission }}"
  loop: "{{ binary_list }}"

- name: Omnia Infrastructure Manager UPGRADE COMPLETE !!
  ansible.builtin.debug:
    msg: "{{ upgrade_success_msg }}"

- name: Get pod status
  ansible.builtin.command: "kubectl get pods -A"
  register: pods_op
  changed_when: false

- name: Print pod status
  ansible.builtin.debug:
    msg: |
      The status of all pods is as below:
      {{ pods_op.stdout }}
