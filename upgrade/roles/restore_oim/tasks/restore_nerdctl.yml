#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get nerdctl version
  ansible.builtin.command: nerdctl --version
  register: nerdctl_version
  changed_when: false

- name: Restore nerdctl
  when: nerdctl_version is defined and '1.5.0' not in nerdctl_version.stdout
  block:
    - name: Stop all running containers
      ansible.builtin.shell: |
        for container_id in $(nerdctl ps -q); do
          nerdctl stop $container_id
        done
      args:
        executable: /bin/bash
      changed_when: false

    - name: Remove old nerdctl binary
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      changed_when: false
      with_items: "{{ nerdctl.binary_files_path }}"

    - name: Remove nerdctl binary from tmp directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_fileglob:
        - "{{ temp_download_dir }}/*nerdctl*"

    - name: Create nerdctl temp directory
      ansible.builtin.file:
        path: "{{ nerdctl_directory }}"
        state: directory
        mode: "{{ directory_permissions }}"

    - name: Download nerdctl archive
      ansible.builtin.get_url:
        url: "{{ nerdctl.url }}"
        dest: "{{ nerdctl.archive_dest }}"
        mode: "{{ file_permission }}"
      register: download_nerdctl
      until: download_nerdctl is not failed
      retries: "{{ max_retries }}"

    - name: Extract nerdctl archive
      ansible.builtin.unarchive:
        src: "{{ nerdctl.archive_dest }}"
        dest: "{{ nerdctl_directory }}"
        mode: "{{ file_permission }}"

    - name: Make nerdctl executable
      ansible.builtin.file:
        path: "{{ nerdctl.folder_dest }}"
        mode: "{{ nerdctl.folder_permission }}"

    - name: Move nerdctl to system bin directory
      ansible.builtin.copy:
        src: "{{ nerdctl.folder_dest }}"
        dest: "{{ item }}"
        mode: preserve
      with_items: "{{ nerdctl.executable_dest }}"
