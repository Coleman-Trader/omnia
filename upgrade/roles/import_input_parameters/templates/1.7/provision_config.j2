# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# ***********************************************************************
# DO NOT REMOVE OR COMMENT OUT ANY LINES IN THIS FILE.
# SIMPLY APPEND THE REQUIRED VALUES AGAINST THE PARAMETER OF YOUR CHOICE.
# ***********************************************************************

#### Mandatory
# Path where user has placed the iso image that needs to be provisioned on target nodes.
# The iso file should be Rocky8-DVD or RHEL-8.x-DVD (full OS) or ubuntu-20.x-live-server.
# Value of iso_file_path should contain cluster_os_type and cluster_os_version values from software_config.json
# When cluster_os_type is ubuntu and cluster_os_version is 22.04, by default omnia configures generic kernel.
# To customize kernel flavor in ubuntu 22.04, define ubuntu_kernel_flavor as 'hwe' or 'generic'
iso_file_path: "{{ provision_config_ns.iso_file_path }}" # Value auto populated by Omnia upgrade script

#### Mandatory
# Nodes present in mapping file, won't be considered for this node_name.
# Prefix for the node names, if needed to be dynamically allocated.
# Hostname = node_name + '0000x' + domain_name
# Hostname <= 65 characters.
# Example: servernode00001.Omnia.test , where node_name=servernode, domain_name=Omnia.test , 00001 used by Omnia
node_name: "{{ provision_config_ns.node_name }}" # Value auto populated by Omnia upgrade script

#### Mandatory
# Domain name the user intends to configure on the cluster.
# Please provide a valid domain name according to the domain name standards.
# Hostname = node_name + '0000x' + domain_name
# Hostname <= 65 characters.
# Example: servernode00001.Omnia.test ,where node_name=servernode ,domain_name=Omnia.test ,00001 used by Omnia
# Examples: abcd.test, ipa.test
domain_name: "{{ provision_config_ns.domain_name }}" # Value auto populated by Omnia upgrade script

#### Optional
# This depicts the path where user has kept the PXE mapping file.
# The mapping file consists of the Service tag, Admin MAC,Hostname and its respective admin IP address and/or BMC IP.
# Ensure that admin IPs given in mapping file are within the admin_static_ranges.
# A templates for mapping file exists in omnia/examples, namely, pxe_mapping_file.csv
# Format of csv: SERVICE_TAG,ADMIN_MAC,HOSTNAME,ADMIN_IP,BMC_IP
pxe_mapping_file_path: "{{ provision_config_ns.pxe_mapping_file_path }}" # Value auto populated by Omnia upgrade script

#### Mandatory
# Variable indicates whether switch based discovery should be enabled to discover the nodes
# To enable switch based discovery, set enable_switch_based to true
# If enable_switch_based is set to true, Following inputs should be provided:
# switch_based_details should be provided in provision_config.yml
# switch_snmp3_username and switch_snmp3_password should be provided in provision_config_credentials.yml
# bmc_network details with nic_name, netmask_bits, static_range and dynamic_range should be provided in network_spec.yml
# Warning: If enable_switch_based is set to true, bmc discovery will be skipped.
# For enabling bmc discovery, set enable_switch_based to false and provide bmc_network details in network_spec.yml
# It accepts true and false values
# Default: false
enable_switch_based: {{ provision_config_ns.enable_switch_based | lower | regex_replace('["\']', '') }}  # Value auto populated by Omnia upgrade script

#### Mandatory, when enabled_switch_based is set to true
# Ports indicates the port no. where the servers are connected on switch
# If split port is needed, use colon (:) as shown in example below.
# Example1:
#   - { ip: 172.96.28.12, ports: '1-48,49:3,50' }
# Example2 with 2 switches:
#   - { ip: 172.96.28.12, ports: '1-48,49:3,50' }
#   - { ip: 172.96.28.14, ports: '1,2,3,5' }
switch_based_details: # Value auto populated by Omnia upgrade script
{% for detail in provision_config_ns.switch_based_details %}
  - { ip: {{ detail.ip }} , ports: '{{ detail.ports }}' }
{% endfor %}

#### Optional
# User defined disk partition applied to remote servers
# Unit: MB
# Accepted mount_point: /var, /tmp, /usr, swap
# Default partition size provided for RHEL/Rocky is /boot: 1024MB, /boot/efi: 256MB and remaining space to / partition.
# Default partition size provided for Ubuntu is /boot: 2148MB, /boot/efi: 1124MB and remaining space to / partition.
# Example for disk_partition:
# disk_partition:
#   - { mount_point: "/var", desired_capacity: "102400" }
disk_partition: # Value auto populated by Omnia upgrade script
{% for detail in provision_config_ns.disk_partition %}
  - { mount_point: "{{ detail.mount_point }}", desired_capacity: "{{ detail.desired_capacity }}" }
{% endfor %}

#### Mandatory
# Timezone that needs to be set during OS provisioning.
# Available timezones are provided in discovery/roles/discovery_validations/common/files/timezone.txt
# Default: "GMT"
# Few accepted values: EST,CET,MST,CST6CDT,PST8PDT
timezone: "{{ provision_config_ns.timezone }}" # Value auto populated by Omnia upgrade script

#### Mandatory
# Language that needs to be set during OS provisioning.
# Default language supported is "en-US"
language: "{{ provision_config_ns.language }}" # Value auto populated by Omnia upgrade script

#### Mandatory
# Default lease time needs to be used by DHCP
# Unit: seconds
# Min: 21600
# Default: 86400
# Max: 31536000
default_lease_time: "{{ provision_config_ns.default_lease_time }}" # Value auto populated by Omnia upgrade script

#### Mandatory
# The ntp_support variable controls whether the cluster will have a Network Time Protocol (NTP) server configured in the Omnia Infrastructure Manager.
# If ntp_support is set to true, NTP server will be configured in the Omnia Infrastructure Manager and the time will be synchronized to the cluster nodes.
# If ntp_support is set to false, NTP server will not be configured in the Omnia Infrastructure Manager and the time will not be synchronized to the cluster nodes.
# In a proxy environment or environment with restricted network access, setting up NTP server in Omnia Infrastructure Manager can result in failure due to unreachable public NTP pools and is not recommended.
# Default: true
ntp_support: true 

