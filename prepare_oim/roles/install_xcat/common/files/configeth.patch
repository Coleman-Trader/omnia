--- configeth	2024-12-18 17:56:49.993535060 +0000
+++ updated_configeth	2024-12-18 18:55:03.988962661 +0000
@@ -113,38 +113,75 @@
         fi
     #debian ubuntu
     elif [ "$str_os_type" = "debian" ];then
-        str_conf_file="/etc/network/interfaces.d/${str_if_name}"
-        if [ $num_v4num -eq 0 ];then
-            echo "auto ${str_if_name}" > $str_conf_file
-            echo "iface ${str_if_name} inet static" >> $str_conf_file
+        netplan info
+        netplan_active=$?
+        if [ $netplan_active -eq 0 ]; then
+            calculate_netmask_bits $str_v4mask
+            str_add_nic_mask_bits=$?
+            str_conf_file=/etc/netplan/${str_if_name}.yaml
+            rm -rf /etc/netplan/${str_if_name}.yaml
+                echo "network:"  >> $str_conf_file
+                echo "  version: 2" >> $str_conf_file
+                echo "  ethernets:" >> $str_conf_file
+                echo "    ${str_if_name}:"  >> $str_conf_file
+                echo "      addresses:"  >> $str_conf_file
+                echo "      - ${str_v4ip}/${str_add_nic_mask_bits}" >> $str_conf_file
+                echo "      dhcp4: false" >> $str_conf_file
+
+	    if [ -n "${str_nic_mtu}" ];then
+	    	echo "      mtu: ${str_nic_mtu}" >> $str_conf_file
+	    fi
+            if [ -n "$str_extra_params" ];then
+                    IFS='-' read -r metric gateway <<< "$str_extra_params"
+                    if [ -n "$metric" ] && [ -n "$gateway" ]; then
+                        echo "      routes:" >> $str_conf_file
+                        echo "      - metric: ${metric}"  >> $str_conf_file
+                        echo "        to: "0.0.0.0/0"" >> $str_conf_file
+                        echo "        via: ${gateway}" >> $str_conf_file
+                        echo "      routing-policy:" >> $str_conf_file
+                        echo "      - table: ${metric}" >> $str_conf_file
+                        echo "        from: ${str_v4ip}" >> $str_conf_file
+                    fi
+            fi
+
+	    chmod 600 $str_conf_file
+            netplan apply
+            sleep 1
+
         else
-            echo "auto ${str_if_name}:${num_v4num}" >> $str_conf_file
-            echo "iface ${str_if_name}:${num_v4num} inet static" >> $str_conf_file
-        fi
-        echo "  address ${str_v4ip}" >> $str_conf_file
-        echo "  netmask ${str_v4mask}" >> $str_conf_file
-        echo "  network ${str_v4net}" >> $str_conf_file
-        if [ "$str_nic_mtu" != "$str_default_token" ]; then
-            echo "  mtu ${str_nic_mtu}" >> $str_conf_file
-        fi
-	#add extra params
-	i=0
-	while [ $i -lt ${#array_extra_param_names[@]} ]
-	do
-	    name="${array_extra_param_names[$i]}"
-	    value="${array_extra_param_values[$i]}"
-            echo "  $i: name=$name value=$value"
-            grep -i "${name}" $str_conf_file
-            if [ $? -eq 0 ];then
-                sed -i "s/.*${name}.*/${name} ${value}/i" $str_conf_file
-            else
-                echo "${name} ${value}" >> $str_conf_file
+            str_conf_file="/etc/network/interfaces.d/${str_if_name}"
+            if [ $num_v4num -eq 0 ];then
+                echo "auto ${str_if_name}" > $str_conf_file
+                echo "iface ${str_if_name} inet static" >> $str_conf_file
+            else
+                echo "auto ${str_if_name}:${num_v4num}" >> $str_conf_file
+                echo "iface ${str_if_name}:${num_v4num} inet static" >> $str_conf_file
+            fi
+            echo "  address ${str_v4ip}" >> $str_conf_file
+            echo "  netmask ${str_v4mask}" >> $str_conf_file
+            echo "  network ${str_v4net}" >> $str_conf_file
+            if [ "$str_nic_mtu" != "$str_default_token" ]; then
+                echo "  mtu ${str_nic_mtu}" >> $str_conf_file
+            fi
+            #add extra params
+            i=0
+            while [ $i -lt ${#array_extra_param_names[@]} ]
+            do
+                name="${array_extra_param_names[$i]}"
+                value="${array_extra_param_values[$i]}"
+                echo "  $i: name=$name value=$value"
+                grep -i "${name}" $str_conf_file
+                if [ $? -eq 0 ];then
+                    sed -i "s/.*${name}.*/${name} ${value}/i" $str_conf_file
+                else
+                    echo "${name} ${value}" >> $str_conf_file
+                fi
+                i=$((i+1))
+            done
+            if [[ ${str_if_name} == [a-zA-Z0-9]*.[0-9]* ]]; then
+                parent_device=`echo ${str_if_name} | sed -e 's/\([a-zA-Z0-9]*\)\.[0-9]*/\1/g'`
+                echo "  vlan-raw-device ${parent_device}" >> $str_conf_file
             fi
-	    i=$((i+1))
-	done		
-        if [[ ${str_if_name} == [a-zA-Z0-9]*.[0-9]* ]]; then
-            parent_device=`echo ${str_if_name} | sed -e 's/\([a-zA-Z0-9]*\)\.[0-9]*/\1/g'`
-            echo "  vlan-raw-device ${parent_device}" >> $str_conf_file
         fi
     else
         str_prefix=$(v4mask2prefix $str_v4mask)
@@ -632,36 +669,87 @@
 		parse_nic_extra_params "$str_extra_params"
 	fi
 
-    # cofniguring the interface
+    # configuring the interface
 
     if [ -f "/etc/debian_version" ];then
-        str_conf_file="/etc/network/interfaces.d/${str_inst_nic}"
-        echo "auto ${str_inst_nic}" > $str_conf_file
-        echo "iface ${str_inst_nic} inet static" >> $str_conf_file
-        echo "  address ${str_inst_ip}" >> $str_conf_file
-        echo "  netmask ${str_inst_mask}" >> $str_conf_file
-        echo "  hwaddress ether ${str_inst_mac}" >> $str_conf_file
-        if [ -n "${str_inst_mtu}" ];then
-            echo "  mtu ${str_inst_mtu}" >> $str_conf_file
-        fi
-        if [ -n "$str_inst_gateway" ];then
-            echo "  gateway $str_inst_gateway" >> $str_conf_file
-        fi
-	#add extra params
-	i=0
-	while [ $i -lt ${#array_extra_param_names[@]} ]
-	do
-	    name="${array_extra_param_names[$i]}"
-	    value="${array_extra_param_values[$i]}"
-            echo "  $i: name=$name value=$value"
-            grep -i "${name}" $str_conf_file
-            if [ $? -eq 0 ];then
-                sed -i "s/.*${name}.*/${name} ${value}/i" $str_conf_file
-            else
-                echo "${name} ${value}" >> $str_conf_file
+        netplan info
+        netplan_active=$?
+        if [ $netplan_active -eq 0 ]; then
+            #configuring the install nic when netplan is active
+            calculate_netmask_bits $str_inst_mask
+            str_inst_mask_bits=$?
+
+            str_conf_file=/etc/netplan/${str_inst_nic}.yaml
+            rm -rf $str_conf_file
+            echo "network:"  > $str_conf_file
+            echo "  version: 2" >> $str_conf_file
+            echo "  ethernets:" >> $str_conf_file
+            echo "    ${str_inst_nic}:" >> $str_conf_file
+            echo "      addresses:" >> $str_conf_file
+            echo "      - ${str_inst_ip}/${str_inst_mask_bits}"  >> $str_conf_file
+            echo "      dhcp4: false"  >> $str_conf_file
+
+            if [ -n "${str_inst_mtu}" ];then
+                echo "      mtu: ${str_inst_mtu}"  >> $str_conf_file
+            fi
+            if [ -n "${str_inst_gateway}" ];then
+                echo "      routes:" >> $str_conf_file
+                echo "      - to: default" >> $str_conf_file
+                echo "        via: ${str_inst_gateway}" >> $str_conf_file
+                echo "        metric: 100" >> $str_conf_file
+            fi
+
+            chmod 600 $str_conf_file
+
+            #configuring additional active nic in dhcp
+            rm -rf /tmp/nic.txt
+            cat /proc/net/dev >> /tmp/nic.txt
+            while read -r nic blah
+            do
+                [[ ${nic} =~ : ]] || continue
+                nic="${nic%:}"
+                [[ "${nic}" = "lo" ]] || [[ "${nic}" = $str_inst_nic ]] && continue
+                str_conf_nic_file=/etc/netplan/${nic}.yaml
+                rm -rf $str_conf_nic_file
+                echo "network:"  > $str_conf_nic_file
+                echo "  version: 2" >> $str_conf_nic_file
+                echo "  ethernets:" >> $str_conf_nic_file
+                echo "    ${nic}:" >> $str_conf_nic_file
+                echo "      dhcp4: true"  >> $str_conf_nic_file
+                chmod 600 $str_conf_nic_file
+            done </tmp/nic.txt
+
+            netplan apply
+        else
+            #configuring install nic when netplan is not active
+            str_conf_file="/etc/network/interfaces.d/${str_inst_nic}"
+            echo "auto ${str_inst_nic}" > $str_conf_file
+            echo "iface ${str_inst_nic} inet static" >> $str_conf_file
+            echo "  address ${str_inst_ip}" >> $str_conf_file
+            echo "  netmask ${str_inst_mask}" >> $str_conf_file
+            echo "  hwaddress ether ${str_inst_mac}" >> $str_conf_file
+            if [ -n "${str_inst_mtu}" ];then
+                echo "  mtu ${str_inst_mtu}" >> $str_conf_file
             fi
-	    i=$((i+1))
-	done		
+            if [ -n "$str_inst_gateway" ];then
+                echo "  gateway $str_inst_gateway" >> $str_conf_file
+            fi
+            #add extra params
+            i=0
+            while [ $i -lt ${#array_extra_param_names[@]} ]
+            do
+                name="${array_extra_param_names[$i]}"
+                value="${array_extra_param_values[$i]}"
+                echo "  $i: name=$name value=$value"
+                grep -i "${name}" $str_conf_file
+                if [ $? -eq 0 ];then
+                    sed -i "s/.*${name}.*/${name} ${value}/i" $str_conf_file
+                else
+                    echo "${name} ${value}" >> $str_conf_file
+                fi
+                i=$((i+1))
+            done
+        fi
         hostname $NODE
         echo $NODE > /etc/hostname
     elif [ "$str_os_type" = "sles" ];then
@@ -1221,10 +1309,17 @@
     #restart the nic
     if [ $bool_restart_flag -eq 1 ];then
         if [ "$str_os_type" = "debian" ];then
-            ifup -a -i /etc/network/interfaces.d/$str_nic_name
-            if [ $? -ne 0 ]; then
-                log_error "ifup -a -i /etc/network/interfaces.d/$str_nic_name failed."
-                error_code=1
+            netplan info
+            netplan_active=$?
+            if [ $netplan_active -eq 0 ]; then
+                netplan apply
+                sleep 1
+            else
+                ifup -a -i /etc/network/interfaces.d/$str_nic_name
+                if [ $? -ne 0 ]; then
+                    log_error "ifup -a -i /etc/network/interfaces.d/$str_nic_name failed."
+                    error_code=1
+                fi
             fi
         else
             if [ $reboot_nic_bool -eq 1 ]; then
